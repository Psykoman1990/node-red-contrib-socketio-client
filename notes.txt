<!-- Event --><!--
<script type="text/javascript">
  /*global RED*/
  RED.nodes.registerType('socketio-listener', {
    category: 'input',
    inputs: 1,
    outputs: 1,
    color: "#D8BFD8",
    icon: "socketio.png",
    paletteLabel: "socketio listener",
    defaults: {
      event: {
        value: "",
        required: true
      }
    },
    label: function() {
        return this.name || "Socket.IO listener";
    }
  });
</script>

<script type="text/x-red" data-template-name="socketio-listener">
  <div class="form-row">
    <label for="node-input-server"><i class="fa fa-globe"></i> Server</label>
    <input type="text" id="node-input-server" placeholder="Server">
  </div>
  <div class="form-row">
    <label for="node-input-name"><i class="fa fa-tag"></i> Name</label>
    <input type="text" id="node-input-name" placeholder="Name">
  </div>
  <div class="form-row">
    <label for="node-input-event"><i class="icon-tasks"></i> event</label>
    <input type="text" id="node-input-event" placeholder="Event">
  </div>
</script>

<script type="text/x-red" data-help-name="socketio-listener">
    <p>Socket.IO Listener</p>
</script>-->


/* sckt listener*/
  /*
  function SocketIOListener(config){
    RED.nodes.createNode(this, config);
    this.server = RED.nodes.getNode(config.server);
    this.name = config.name;
    this.event = config.event;
    this.sto = null;
    this.client = connect(this.server, true);
  }
  RED.nodes.registerType('socketio-listener', SocketIOListener);
  */